
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>管理者ページ - 予約一覧</title>
  <!-- FullCalendar CSS -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.css" rel="stylesheet" />

<!-- FullCalendar JS（グローバルビルド） -->
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>

<link rel="stylesheet" href="https://unpkg.com/tippy.js@6/themes/light.css" />
<script src="https://unpkg.com/@popperjs/core@2"></script>
<script src="https://unpkg.com/tippy.js@6"></script>

<style>
    #calendar {
      max-width: 900px;
      margin: 40px auto 60px; /* 下に少しゆとり追加 */
      background-color: white;
     padding: 20px;
     border-radius: 10px;
     box-shadow: 0 0 10px rgba(0,0,0,0.05);
     padding-bottom: 40px;
    }

    body {
  font-family: 'Helvetica Neue', sans-serif;
  background-color: #f9f9f9;
  margin: 0;
  padding: 20px;
  color: #333;
}

h1, h2 {
  text-align: center;
  color: #2c3e50;
}
.header-link-wrapper {
  max-width: 900px;
  margin: 10px auto;
  display: flex;
  justify-content: flex-end;
}
a.button-link {
  display: inline-block;
  margin: 0;
  text-align: center;
  text-decoration: none;
  padding: 10px 20px;
  background-color: #3498db;
  color: white;
  border-radius: 5px;
  transition: background 0.3s;
}

a.button-link:hover {
  background-color: #2980b9;
}

.accordion-container {
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  padding: 20px;
  max-width: 700px;
  margin: 0 auto 40px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.accordion {
  max-height: 600px;
  overflow-y: auto;
  padding-right: 10px;
}

.accordion h3 {
  background: #3498db;
  color: white;
  padding: 10px 15px;
  margin: 0;
  cursor: pointer;
  user-select: none;
  border-radius: 5px 5px 0 0;
  margin-top: 10px;
}
.accordion h3.active {
  background: #2980b9;
}
.accordion .panel {
  background: white;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease;
  border: 1px solid #ddd;
  border-top: none;
  padding: 0 15px;
  border-radius: 0 0 5px 5px;
}
.accordion .panel.open {
  padding: 15px;
  max-height: 200px;       /* ← ここを変更 */
  overflow-y: auto;        /* ← ここを追加 */
}
.accordion .reservation-item {
  padding: 5px 0;
  border-bottom: 1px solid #eee;
}
.accordion .reservation-item:last-child {
  border-bottom: none;
}



#admin-calendar {
    max-width: 900px;
    margin: 40px auto;
  }


.disable-slot {
  max-width: 600px;
  margin: 20px auto;
  background: white;
  padding: 20px;
  border-radius: 10px;
}
.disable-slot label {
  display: block;
  margin: 10px 0;
}

#admin-calendar {
      max-width: 900px;
      margin: 40px auto 60px; /* 下に少しゆとり追加 */
      background-color: white;
     padding: 20px;
     padding-bottom: 40px;
     border-radius: 10px;
     box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

.enable-slot {
  max-width: 600px;
  margin: 20px auto;
  background: white;
  padding: 20px;
  border-radius: 10px;
}
.enable-slot label {
  display: block;
  margin: 10px 0;
}

select, input[type="date"] {
  padding: 5px;
  width: 100%;
  margin-top: 5px;
}

button {
  margin: 15px;
  padding: 10px 15px;
  border: none;
  background-color: #2ecc71;
  color: white;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s;
}

button:hover {
  background-color: #27ae60;
}

ul {
  list-style: none;
  padding: 0;
  max-width: 600px;
  margin: 20px auto;
}

ul li {
  background: #fff;
  margin-bottom: 10px;
  padding: 10px;
  border-left: 5px solid #e74c3c;
  border-radius: 5px;
  box-shadow: 0 0 5px rgba(0,0,0,0.05);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

    .modal {
  position: fixed;
  z-index: 9999;
  top: 0; left: 0;
  width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.5);
  display: none;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: white;
  padding: 2em;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  width:300px
}
.modal-content p {
  margin-bottom: 1em;
  font-weight: bold;
}

  </style>
</head>
<body>
  <h1>予約一覧（管理者用）</h1>
  <div class="header-link-wrapper">
    <a href="/admin/users" class="button-link">ユーザー管理ページ</a>
  </div>
  
  <div id='calendar'></div>

  
  
  <div class="accordion-container">
  <div id="monthNav" style="margin-bottom: 15px; display: flex; align-items: center; gap: 10px;">
    <button id="prevMonthBtn">◀︎</button>
    <div id="currentMonthDisplay" style="min-width: 120px; text-align: center; font-weight: bold;"></div>
    <button id="nextMonthBtn">▶︎</button>
  </div>
  
  <div class="accordion">
    <%
  // 日付ごとに予約をグループ化
  const grouped = {};
  reservations.forEach(r => {
    if (!grouped[r.date]) grouped[r.date] = [];
    grouped[r.date].push(r);
  });

  // 日付のリストをソート（昇順）
  const sortedDates = Object.keys(grouped).sort();

  // 今日の日付文字列を用意（YYYY-MM-DD形式）
  const today = new Date().toISOString().slice(0, 10);
%>

    <% sortedDates.forEach(date => { 
      const isToday = (date === today);
      const month = date.slice(0, 7); // YYYY-MM
    %>
      <div class="accordion-item" data-month="<%= month %>">
        <h3 class="<%= isToday ? 'active' : '' %>">
          <%= date %> (<%= grouped[date].length %>件予約)
        </h3>
        <div class="panel <%= isToday ? 'open' : '' %>">
          <% grouped[date].forEach(r => { %>
            <div class="reservation-item">
              <strong><%= r.name %></strong>（<%= r.email %>） - <%= r.course %> - <%= r.timeslot %>
              <% if (r.note) { %> <br>備考: <%= r.note %> <% } %>
            </div>
          <% }) %>
        </div>
      </div>
    <% }) %>
    </div>
  </div>

    

  <div style="text-align: center;">
  <form action="/admin/export-csv" method="get">
    <button type="submit">予約データCSVダウンロード</button>
  </form>
  </div>

<h2>教室削除</h2>
<div id='admin-calendar'></div>



  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const calendarEl1 = document.getElementById('calendar');
      const calendar1 = new FullCalendar.Calendar(calendarEl1, {
        initialView: 'dayGridMonth',
        locale: 'ja',
        events: <%- JSON.stringify(reservations.map(r => ({
          title: r.name + '（' + r.course + '）',
          start: r.date,
          description: r.timeslot + ' / ' + r.email + ' / ' + r.note
        }))) %>,
        eventDidMount: function(info) {
      const tooltip = document.createElement('div');
      tooltip.innerText = info.event.extendedProps.description;
      tooltip.style.position = 'absolute';
      tooltip.style.background = 'rgba(0, 0, 0, 0.7)';
      tooltip.style.color = '#fff';
      tooltip.style.padding = '5px';
      tooltip.style.borderRadius = '3px';
      tooltip.style.zIndex = '1000';
      tooltip.style.pointerEvents = 'none';

      // マウスオーバーでツールチップ表示
      info.el.addEventListener('mouseenter', function() {
        document.body.appendChild(tooltip);
        const rect = info.el.getBoundingClientRect();
        tooltip.style.left = `${rect.left + window.scrollX + 10}px`; // 少し右にずらす
        tooltip.style.top = `${rect.top + window.scrollY - 30}px`; // 少し上にずらす
      });

      // マウスアウトでツールチップ非表示
      info.el.addEventListener('mouseleave', function() {
        document.body.removeChild(tooltip);
      });
    }
  });
      calendar1.render();
    });

    function closeModal() {
  document.getElementById('flash-modal').style.display = 'none';
}

// 月一覧を作成（ユニーク＆ソート済み）
const months = Array.from(new Set(
  Array.from(document.querySelectorAll('.accordion-item')).map(item => item.dataset.month)
)).sort();

// 今日の月を基準に初期値セット
const today = new Date();
const padZero = num => num < 10 ? '0' + num : num;
const formatYearMonth = ym => ym.slice(0,4) + '年' + ym.slice(5,7) + '月';

// 現在選択中の月インデックス
let currentMonthIndex = months.indexOf(today.toISOString().slice(0,7));
if(currentMonthIndex === -1) currentMonthIndex = 0;

const prevBtn = document.getElementById('prevMonthBtn');
const nextBtn = document.getElementById('nextMonthBtn');
const currentMonthDisplay = document.getElementById('currentMonthDisplay');

function updateDisplay() {
  const month = months[currentMonthIndex];
  currentMonthDisplay.textContent = formatYearMonth(month);
  
  document.querySelectorAll('.accordion-item').forEach(item => {
    item.style.display = (item.dataset.month === month) ? '' : 'none';
  });
  
  // ボタンの活性/非活性制御
  prevBtn.disabled = (currentMonthIndex === 0);
  nextBtn.disabled = (currentMonthIndex === months.length - 1);
  
  // 開いているアコーディオンは閉じる（初期状態）
  document.querySelectorAll('.accordion h3.active').forEach(h3 => {
    h3.classList.remove('active');
    h3.nextElementSibling.classList.remove('open');
  });
}

prevBtn.addEventListener('click', () => {
  if(currentMonthIndex > 0) {
    currentMonthIndex--;
    updateDisplay();
  }
});

nextBtn.addEventListener('click', () => {
  if(currentMonthIndex < months.length - 1) {
    currentMonthIndex++;
    updateDisplay();
  }
});

document.querySelectorAll('.accordion h3').forEach(header => {
  header.addEventListener('click', () => {
    const currentlyActive = document.querySelector('.accordion h3.active');
    if (currentlyActive && currentlyActive !== header) {
      currentlyActive.classList.remove('active');
      currentlyActive.nextElementSibling.classList.remove('open');
    }
    header.classList.toggle('active');
    header.nextElementSibling.classList.toggle('open');
  });
});

window.addEventListener('DOMContentLoaded', () => {
  updateDisplay();
});

document.addEventListener('DOMContentLoaded', function () {
    const calendarEl2 = document.getElementById('admin-calendar');
    const calendar2 = new FullCalendar.Calendar(calendarEl2, {
      initialView: 'dayGridMonth',
      locale: 'ja',
      timeZone: 'local',
      events: '/api/reservations/range', // 管理者にも予約＋空きスロットを渡す

      eventClick: function(info) {
  const isDisabled = info.event.extendedProps.disabled;
  const date = info.event.startStr;
  const course = info.event.extendedProps.course;
  const timeslot = info.event.extendedProps.timeslot;

  if (!isDisabled) {
    const confirmed = confirm(`${date} の ${course} (${timeslot}) を無効化しますか？`);
    if (confirmed) {
      fetch('/admin/disable-slot', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({ date, course, timeslot })
      }).then(() => {
        calendar2.refetchEvents();
        alert("スロットを無効化しました");
      });
    }
  } else {
    const confirmed = confirm(`${date} の ${course} (${timeslot}) を有効化しますか？`);
    if (confirmed) {
      fetch('/admin/enable-slot', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({ date, course, timeslot })
      }).then(() => {
        calendar2.refetchEvents();
        alert("スロットを有効化しました");
      });
    }
  }
},


      eventDidMount: function(info) {
        const isDisabled = info.event.extendedProps.disabled;

        // 色変更（例：無効はグレー）
        if (isDisabled) {
          info.el.style.backgroundColor = '#ccc';
          info.el.style.borderColor = '#aaa';
          info.el.style.color = '#333';
        }

        // ツールチップ
        const tooltipContent = `
          <strong>コース:</strong> ${info.event.extendedProps.course || ''}<br>
          <strong>時間:</strong> ${info.event.extendedProps.timeslot || ''}<br>
          <strong>残り:</strong> ${info.event.extendedProps.remaining ?? '-'}名<br>
          <strong>状態:</strong> ${isDisabled ? '無効' : '有効'}
        `;
        tippy(info.el, {
          content: tooltipContent,
          allowHTML: true,
          theme: 'light',
          placement: 'top',
        });
      }
    });

    calendar2.render();
  });


  </script>
</body>
</html>